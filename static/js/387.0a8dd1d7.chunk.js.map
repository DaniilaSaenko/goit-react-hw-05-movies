{"version":3,"file":"static/js/387.0a8dd1d7.chunk.js","mappings":"8JAYMA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACVC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,IAGF,K,qJCrBaC,EAAKT,EAAAA,GAAAA,GAAH,wIASFU,EAAOV,EAAAA,GAAAA,GAAH,uGAOJW,EAAQX,EAAAA,GAAAA,GAAH,yFAMLY,EAAOZ,EAAAA,GAAAA,EAAH,0D,kBCmBjB,EAnCa,WACX,OAAwBa,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMP,OAJDE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAQM,EAAZ,GAC3B,GAAE,CAACL,KAGD,SAACjB,EAAA,EAAD,UACGe,EAAKQ,QACJ,SAACb,EAAD,UACGK,EAAKS,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAIC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,UAACjB,EAAD,WACoB,OAAjBiB,GACC,gBACEC,IAAG,0CAAqCD,GACxCE,IAAKL,EACLM,MAAO,OAGT,gBAAKF,IAAKG,EAASF,IAAKL,EAAMM,MAAO,OAEvC,SAACnB,EAAD,UAAQa,KACR,UAACZ,EAAD,yBAAkBc,OAXTD,EADH,OAiBb,SAACb,EAAD,sDAIP,C,mMCvCKoB,EAAU,mCACVC,EAAY,gCAEX,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACqBD,IAHzC,cAEGI,EAFH,yBAKIA,EAASf,KAAKgB,SALlB,gCAOHC,QAAQC,MAAM,KAAIC,SAPf,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBzB,GAAxB,gGAEoBmB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACAjB,EADA,oBACmBgB,IAHvC,cAEGI,EAFH,yBAKIA,EAASf,MALb,gCAOHiB,QAAQC,MAAM,KAAIC,SAPf,gFAWA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEoBR,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACeD,EADf,kBACgCW,IAHpD,cAEGP,EAFH,yBAKIA,EAASf,KAAKgB,SALlB,gCAOHC,QAAQC,MAAM,KAAIC,SAPf,gFAWA,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAAuBH,GAAvB,gGAEoBmB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACAjB,EADA,4BAC2BgB,IAH/C,cAEGI,EAFH,yBAKIA,EAASf,KAAKP,MALlB,gCAOHwB,QAAQC,MAAM,KAAIC,SAPf,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0B5B,GAA1B,gGAEoBmB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACAjB,EADA,4BAC2BgB,IAH/C,cAEGI,EAFH,yBAKIA,EAASf,KAAKgB,SALlB,gCAOHC,QAAQC,MAAM,KAAIC,SAPf,gF","sources":["components/Box.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  space,\n} from 'styled-system';\n\nconst Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);\n\nexport default Box;\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  list-style: none;\n  gap: 30px;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  margin: 20px;\n  width: 150px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Title = styled.h2`\n  font-size: 16px;\n  margin-bottom: 10px;\n  margin-top: 10px;\n`;\n\nexport const Text = styled.p`\n  font-size: 14px;\n  margin: 0;\n`;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from '../../service/api';\nimport Box from '../Box';\nimport { Ul, Item, Title, Text } from './Cast.styled';\nimport noPhoto from '../../pages/NotFound/no-poster.png';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCast(movieId).then(data => setCast(data));\n  }, [movieId]);  \n\n   return (\n     <Box>\n       {cast.length ? (\n         <Ul>\n           {cast.map(({ name, id, character, profile_path }) => (\n             <Item key={id}>\n               {profile_path !== null ? (\n                 <img\n                   src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n                   alt={name}\n                   width={200}\n                 />\n               ) : (\n                 <img src={noPhoto} alt={name} width={200} />\n               )}\n               <Title>{name}</Title>\n               <Text>Character: {character}</Text>\n             </Item>\n           ))}\n         </Ul>\n        ) : (\n        <Text>We don`t have any casts for this movie</Text>\n      )}\n    </Box>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\n  movieId: PropTypes.number,\n  cast: PropTypes.object,\n};\n","import axios from 'axios';\n\nconst API_KEY = 'cda37336b232ef132cf60fbdeefcf10d';\nconst BASIC_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const response = await axios.get(\n      `${BASIC_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\nexport async function getMovie(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASIC_URL}movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\nexport async function searchMovies(query) {\n  try {\n    const response = await axios.get(\n      `${BASIC_URL}search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\nexport async function getCast(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASIC_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\nexport async function getReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASIC_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","Ul","Item","Title","Text","useState","cast","setCast","movieId","useParams","useEffect","getCast","then","data","length","map","name","id","character","profile_path","src","alt","width","noPhoto","API_KEY","BASIC_URL","fetchTrendingMovies","axios","response","results","console","error","message","getMovie","searchMovies","query","getReviews"],"sourceRoot":""}