{"version":3,"file":"static/js/485.425480da.chunk.js","mappings":"0NAEaA,EAAYC,EAAAA,GAAAA,GAAH,4JAQTC,EAAcD,EAAAA,GAAAA,GAAH,iaAgBXE,EAAYF,EAAAA,GAAAA,GAAH,0HAOTG,EAAMH,EAAAA,GAAAA,IAAH,6D,kBC7BHI,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpBC,GAAWC,EAAAA,EAAAA,MAGjB,OADAC,QAAQC,IAAIJ,IAEV,SAACN,EAAD,iBACGM,QADH,IACGA,OADH,EACGA,EAAUK,KAAI,SAAAC,GAAK,OAClB,SAACV,EAAD,WACE,UAAC,KAAD,CAAMW,GAAE,yBAAaD,QAAb,IAAaA,OAAb,EAAaA,EAAOE,IAAMC,MAAO,CAAEC,KAAMT,GAAjD,UAC6B,QAAlB,OAALK,QAAK,IAALA,OAAA,EAAAA,EAAOK,cACL,SAACb,EAAD,CACEc,IAAG,UATT,uCASS,cAAWN,QAAX,IAAWA,OAAX,EAAWA,EAAOK,aACrBE,IAAI,GACJC,MAAO,OAGT,SAAChB,EAAD,CAAKc,IAAKG,EAASF,IAAI,GAAGC,MAAO,OAEvC,SAACjB,EAAD,iBAAYS,QAAZ,IAAYA,OAAZ,EAAYA,EAAOU,YAXvB,OAAkBV,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAOE,GADP,KAkBzB,C,2HC1BYS,E,QAAYtB,GAAAA,GAAH,sE,SCmBtB,EAhBa,WACX,OAA4BuB,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAOA,OALAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAsBC,MAAK,SAAAC,GACzBJ,EAAUI,EACX,GACF,GAAE,KAED,6BACE,SAACP,EAAD,6CACA,SAAClB,EAAA,EAAD,CAAWC,SAAUmB,MAG1B,C,mMCjBKM,EAAU,mCACVC,EAAY,gCAEX,SAAeJ,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBK,EAAAA,EAAAA,IAAA,UAClBD,EADkB,sCACqBD,IAHzC,cAEGG,EAFH,yBAKIA,EAASJ,KAAKK,SALlB,gCAOH1B,QAAQ2B,MAAM,KAAIC,SAPf,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBC,GAAxB,gGAEoBN,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iBACAO,EADA,oBACmBR,IAHvC,cAEGG,EAFH,yBAKIA,EAASJ,MALb,gCAOHrB,QAAQ2B,MAAM,KAAIC,SAPf,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEoBR,EAAAA,EAAAA,IAAA,UAClBD,EADkB,gCACeD,EADf,kBACgCU,IAHpD,cAEGP,EAFH,yBAKIA,EAASJ,KAAKK,SALlB,gCAOH1B,QAAQ2B,MAAM,KAAIC,SAPf,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAuBH,GAAvB,gGAEoBN,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iBACAO,EADA,4BAC2BR,IAH/C,cAEGG,EAFH,yBAKIA,EAASJ,KAAKa,MALlB,gCAOHlC,QAAQ2B,MAAM,KAAIC,SAPf,gFAWA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA0BL,GAA1B,gGAEoBN,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iBACAO,EADA,4BAC2BR,IAH/C,cAEGG,EAFH,yBAKIA,EAASJ,KAAKK,SALlB,gCAOH1B,QAAQ2B,MAAM,KAAIC,SAPf,gF","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: 20px;\n  padding: 0;\n  margin: 0px auto;\n`;\n\nexport const CardWrapper = styled.li`\n  border: 1px solid grey;\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  list-style: none;\n  > a {\n    text-decoration: none;\n  }\n    object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n  text-align: center;\n`;\nexport const Img = styled.img`\n  width: 100%;\n  height: auto;\n  \n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Container, CardWrapper, MovieName, Img } from './MovieList.styled';\nimport noPhoto from '../../pages/NotFound/no-poster.png';\n\nexport const MovieList = ({ products }) => {\n  const location = useLocation();\n  const IMG = 'https://image.tmdb.org/t/p/original';\n  console.log(products);\n  return (\n    <Container>\n      {products?.map(movie => (\n        <CardWrapper key={movie?.id}>\n          <Link to={`/movies/${movie?.id}`} state={{ from: location }}>\n               {movie?.poster_path !== null ? (\n                  <Img\n                    src={`${IMG}${movie?.poster_path}`}\n                    alt=\"\"\n                    width={200}\n                  />\n                ) : (\n                  <Img src={noPhoto} alt=\"\" width={278} />\n                )}   \n            <MovieName>{movie?.title}</MovieName>\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const HomeTitle = styled.h1`\n  display: flex;\n  justify-content: center;\n`;","import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from '../../service/api';\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport { HomeTitle } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrendingMovies().then(data => {\n      setMovies(data);\n    });\n  }, []);\n  return (\n    <main>\n      <HomeTitle>Most popular films of the day</HomeTitle>\n      <MovieList products={movies} />\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = 'cda37336b232ef132cf60fbdeefcf10d';\nconst BASIC_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const response = await axios.get(\n      `${BASIC_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\nexport async function getMovie(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASIC_URL}movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\nexport async function searchMovies(query) {\n  try {\n    const response = await axios.get(\n      `${BASIC_URL}search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\nexport async function getCast(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASIC_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\nexport async function getReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASIC_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n"],"names":["Container","styled","CardWrapper","MovieName","Img","MovieList","products","location","useLocation","console","log","map","movie","to","id","state","from","poster_path","src","alt","width","noPhoto","title","HomeTitle","useState","movies","setMovies","useEffect","fetchTrendingMovies","then","data","API_KEY","BASIC_URL","axios","response","results","error","message","getMovie","movieId","searchMovies","query","getCast","cast","getReviews"],"sourceRoot":""}